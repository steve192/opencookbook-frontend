stages:
  - build
  - test
  - package
  - publish


build-web:
  stage: build
  image: node:16.13
  script: 
    - npm ci
    - npm run build-web
  artifacts:
    paths:
      - web-build/

sonarqube:
  stage: test
  only:
  - master
  image: sonarsource/sonar-scanner-cli:latest
  allow_failure: true
  script:
    - sonar-scanner 
      -Dsonar.qualitygate.wait=true 
      -Dsonar.sources=src 
      -Dsonar.login="$SONAR_TOKEN" 
      -Dsonar.projectKey="$CI_PROJECT_NAME" 
      -Dsonar.links.scm="$CI_PROJECT_URL" 
      -Dsonar.scm.revision="$CI_COMMIT_SHA" 
      -Dsonar.scm.disabled=False 
      -Dsonar.projectVersion="$CI_PIPELINE_IID"


package-docker-qa:
  stage: package
  resource_group: qa
  needs:
    - job: build-web
      artifacts: true
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    REGISTRY_TAG: qa
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$REGISTRY_TAG --cache=true --cache-ttl=100h
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'

publish-expo:
  stage: publish
  resource_group: qa
  image: node:16.13
  variables:
    EXPO_TOKEN: $EXPO_TOKEN
  script:
    - npm ci
    - npm run publish-expo -- --release-channel beta

publish-cluster:
  stage: publish
  needs: ["package-docker-qa"]
  trigger:
    project: opencookbook/opencookbook-docker
    branch: main